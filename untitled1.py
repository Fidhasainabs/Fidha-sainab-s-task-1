# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wP8Bc_DlnMzQtd1Bid71ccig9Oy0TfSM
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df = sns.load_dataset('titanic')
print(df.head())
print("Shape:", df.shape)
print(df.info())
print("\nMissing Values:\n", df.isnull().sum())

#encoding
df_encoded = pd.get_dummies(df, drop_first=True)

print(df_encoded.dtypes)

from sklearn.preprocessing import StandardScaler
#standardization

numeric_cols = df_encoded.select_dtypes(include=[np.number]).columns

scaler = StandardScaler()
df_encoded[numeric_cols] = scaler.fit_transform(df_encoded[numeric_cols])

# Boxplots
for col in numeric_cols:
    plt.figure(figsize=(6, 1))
    sns.boxplot(x=df_encoded[col])
    plt.title(f'Boxplot for {col}')
    plt.show()

# Remove outliers
Q1 = df_encoded[numeric_cols].quantile(0.25)
Q3 = df_encoded[numeric_cols].quantile(0.75)
IQR = Q3 - Q1

df_cleaned = df_encoded[~((df_encoded[numeric_cols] < (Q1 - 1.5 * IQR)) |
                          (df_encoded[numeric_cols] > (Q3 + 1.5 * IQR))).any(axis=1)]

print("Original shape:", df_encoded.shape)
print("After removing outliers:", df_cleaned.shape)